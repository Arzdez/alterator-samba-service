#!/usr/bin/env python3
from pydbus import SystemBus
import argparse
import sys

def arg_parser():
    parser = argparse.ArgumentParser(description="Alterator samba ad Service",
                                     usage='%(prog)s [--path PATH] [-m METHOD] [-p PATH]')

    parser.add_argument(
        "--path", help="dbus object path"
    )
    parser.add_argument(
        "-m","--method", help="method name", default="Info"
    )
    parser.add_argument(
        "-p","--params", help="path to json file with parameter", default=""
    )
    
    return parser.parse_args()

def main():
    bus = SystemBus()
    args = arg_parser()
    
    print(args)
    path_to_obect = args.path
    method = args.method
    path_to_json= args.params

    if not path_to_obect:
        print("Path is required")
        sys.exit(1)
    elif method in ["Deploy", "Backup", "Restore"] and not args.params:
        print("Missing --params argument")
        print(f"Params is required for {args.method} method")
        sys.exit(1)

    obj = bus.get(
        "org.altlinux.alterator",
         path_to_obect
    )["org.altlinux.alterator.service1"]

    if method in ["Deploy", "Backup", "Restore"]:
        return_code=getattr(obj, method)(path_to_json)
        print(f"Return code: {return_code}")
    else:
        print(getattr(obj, method)())


if __name__ == "__main__":
    main()